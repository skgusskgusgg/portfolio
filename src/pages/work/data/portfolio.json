[
    {
        "id": 1,
        "name": "Dwea-Getarian",
        "background": "./images/dt.png",
        "img": [
            { "id": 1, "img": "images/dtmain.png" },
            { "id": 2, "img": "images/dtdetail.png" },
            { "id": 3, "img": "images/dtcart.png" },
            { "id": 4, "img": "images/dtsearch.png" }
        ],
        "category": "WEB",
        "day": "2023.1.2 - 2023.1.13",
        "person": "FE:4 & BE :2",
        "bold": "오설록 클론 프로젝트",
        "about": "처음 채식을 시도하는 사람들의 접근성이 제한되는 문제, 채식주의자들의 선택 제한, 그리고 환경보호에 가치를 두는 소비자들의 선택지를 늘려주기 위한 해답을 개발",
        "skill": [
            {
                "id": 1,
                "name": "git",
                "color": "F05032"
            },
            {
                "id": 2,
                "name": "github",
                "color": "181717"
            },
            {
                "id": 3,
                "name": "javascript",
                "color": "F7DF1E"
            },
            {
                "id": 4,
                "name": "react",
                "color": "61DAFB"
            },
            {
                "id": 5,
                "name": "reactRouter",
                "color": "CA4245"
            },
            {
                "id": 6,
                "name": "sass",
                "color": "CC6699"
            }
        ],
        "myPart": [
            {
                "id": 1,
                "name": "product page",
                "content": [
                    {
                        "id": 11,
                        "content": "재사용 컴포넌트 활용"
                    },
                    {
                        "id": 12,
                        "content": "필터 기능 추가"
                    },
                    {
                        "id": 13,
                        "content": "백앤드와의 통신을 통한 아이템 불러오기"
                    }
                ]
            },
            {
                "id": 2,
                "name": "product detail page",
                "content": [
                    {
                        "id": 21,
                        "content": "useParam을 이용해 동일한 id값을 가진 아이템을 서버에서 불러옴"
                    },
                    {
                        "id": 22,
                        "content": "useEffect의 의존성 배열을 이용하여 카운트의 타이밍을 맞추는 총 합계 구현"
                    },
                    {
                        "id": 23,
                        "content": "useRef를 이용하여 해당하는 위치로 이동"
                    },
                    {
                        "id": 24,
                        "content": "위치 고정을 위해 useState와 pageOffset을 사용하여 클래스에 bloolean값을 주어 고정"
                    },
                    {
                        "id": 25,
                        "content": "menuTab을 구현하기 위해 빈배열을 만들어 상태값을 관리하면서 해당하는 list를 클릭했을때 같은 아이디값을 가진 content를 나타냄"
                    }
                ]
            },
            {
                "id": 3,
                "name": "cart page",
                "content": [
                    {
                        "id": 31,
                        "content": "디테일페이지에서 서버에서 넘겨주어 저장하고 있던 아이템들을 저장되있던 토큰값을 불러와 있던 장바구니 아이템들을 불러옴"
                    },
                    {
                        "id": 32,
                        "content": "장바구니에서 같은 아이디값을 가진 아이템들이 중복되지않도록 필터 작업을 해줌"
                    },
                    {
                        "id": 33,
                        "content": "타입이 plus,minus일때에 조건문을 걸어주어 수량을 증감하는 작업을 해주고 디테일 페이지와같이 useEffect를 활용하여 카운트 타이밍에 맞게 총금액 합산"
                    },
                    {
                        "id": 34,
                        "content": "해당하는 아이템을 삭제하기위해서 데이터에서 delete메소드를 이용하여 삭제할 아이디값을 넘겨줌"
                    },
                    {
                        "id": 35,
                        "content": "아이템을 결제창으로 넘겨주기 위해 POST 메소드를 이용하여 선택된 아이템들을 넘겨줌"
                    }
                ]
            },
            {
                "name": "search page",
                "content": [
                    {
                        "id": 41,
                        "content": "검색필터를 구현하려고 input의 value값을 구해준뒤 서버와 통신하여 keword값에 input value를 할당해 주어 데이터를 불러옴"
                    }
                ]
            }
        ],
        "review": [
            {
                "id": 1,
                "content": "처음 협업을 진행했던 프로젝트"
            },
            {
                "id": 2,
                "content": "팀 프로젝트는 나혼자만이 구현하면 완성이 아니기때문에 팀원들과의 소통의 중요성을 많이 배우게 되는 시간이었다."
            },
            {
                "id": 3,
                "content": "부모컴포넌트에서 자식컴포넌트로 넘겨줄때에 순서를 정확히 알고 전달해 주어야 한다는 것을 배웠다. 추가로 context API에 관한 공부가 더 필요할 것 같다."
            }
        ]
    },
    {
        "id": 2,
        "name": "PET WITH U",
        "background": "./images/pet.jpg",
        "img": [{ "id": 1, "img": "images/petgif.gif" }],
        "category": "WEB",
        "day": "2023.1.30 - 2023.2.10",
        "person": "FE:3 & BE :1",
        "bold": "인테리어 제품을 커뮤니티 활성화를 이용하여 활발하게 판매하고있는 사이트, '오늘의 집'을 모델링한 프로젝트",
        "about": "petwithU는 반려동물을 사랑하는 사람들이 모여 소통하고 상품을 판매하는 사이트",
        "skill": [
            {
                "id": 1,
                "name": "git",
                "color": "F05032"
            },
            {
                "id": 2,
                "name": "github",
                "color": "181717"
            },
            {
                "id": 3,
                "name": "javascript",
                "color": "F7DF1E"
            },
            {
                "id": 4,
                "name": "react",
                "color": "61DAFB"
            },
            {
                "id": 5,
                "name": "reactRouter",
                "color": "CA4245"
            },
            {
                "id": 6,
                "name": "styledComponents",
                "color": "DB7093"
            }
        ],
        "myPart": [
            {
                "id": 1,
                "name": "이미지 업로드 및 글쓰기 페이지",
                "content": [
                    {
                        "id": 1,
                        "content": "createObjectURl() 메서드를 이용하여 사용자가 올리고싶은 이미지 미리보기"
                    },
                    {
                        "id": 2,
                        "content": "사용자가 이미지를 클릭했을때, 원하는 지점에 등록하고싶은 아이템을 담을 아이콘 생성"
                    },
                    {
                        "id": 3,
                        "content": "사용자가 선택한 아이콘에 검색기능을 추가하여 사용자가 다른 사용자에게 추천하고 싶은 아이템을 선택"
                    },
                    {
                        "id": 4,
                        "content": "사용자가 전하고 싶은 카테고리, 메세지, 해시태그를 담을 수 있는 input창 생성"
                    },
                    {
                        "id": 5,
                        "content": "하나의 게시글에 하나의 이미지와 메세지만 올리는 것이 아닌, 사용자가 원한다면 하나의 게시글에 여러 이미지와 메세지들을 담을 수 있게 추가 기능 생성"
                    },
                    {
                        "id": 6,
                        "content": "new formdata()를 이용하여 서버에 업로드한 이미지 저장"
                    }
                ]
            },
            {
                "id": 2,
                "name": "장바구니 페이지",
                "content": [
                    {
                        "id": 1,
                        "content": "사용자가 장바구니에 넣어 놨던 상품의 리스트를 한눈에 보기 쉽게 출력"
                    },
                    {
                        "id": 2,
                        "content": "사용자가 원하는 상품의 체크박스를 클릭시 해당하는 상품만 구매 가능하게 함"
                    },
                    {
                        "id": 3,
                        "content": "사용자가 장바구니 내에서 상품을 추가 or 삭제할 수 있으며, 선택된 상품의 전체값을 한눈에 볼 수 있음"
                    }
                ]
            },
            {
                "id": 3,
                "name": "상품 디테일 페이지",
                "content": [
                    {
                        "id": 1,
                        "content": "사용자가 원하는 상품에 대한 상세를 나타내줌"
                    },
                    {
                        "id": 2,
                        "content": "사용자가 구매하고싶은 만큼 상품의 수량을 증감 할 수 있음"
                    },
                    {
                        "id": 3,
                        "content": "사용자가 바로 구매하지 않고 장바구니를 클릭하면 장바구니 페이지로 상품을 넘겨줌"
                    }
                ]
            }
        ],
        "review": [
            {
                "id": 1,
                "content": "소수의 인원으로 진행했던 팀 프로젝트"
            },
            {
                "id": 2,
                "content": "외부 라이브러리가 아닌 순수하게 내 힘으로 개발을 하고 싶었기 때문에 글쓰기 페이지안에서 원하는 지점을 클릭하면 아이콘을 생성하려면 어떻게 구현할 것인지 가장 많은 공을 들였었다. 이 시간가짐으로써 개발을 할 때의 사고가 좀 더 넓혀지게 되는 계기가 된 것 같다."
            }
        ]
    },
    {
        "id": 3,
        "name": "SMART INSIDE AI",
        "background": "./images/smart.png",
        "img": [
            { "id": 1, "img": "images/smart.png" },
            { "id": 2, "img": "images/smartdrag.gif" },
            { "id": 3, "img": "images/smartlist.png" },
            { "id": 4, "img": "images/smartwrite.png" },
            { "id": 5, "img": "images/smartdetail.png" }
        ],
        "category": "WEB",
        "day": "2023.2.13 - 2023.3.9",
        "person": "FE:2 & BE :2",
        "bold": "스마트 인사이드 AI 인턴쉽",
        "about": "사용자의 안전 관리를 위하여 스마트 안전 통합 관리 시스템을 웹 사이트에 적용시킨 프로젝트",
        "skill": [
            {
                "id": 1,
                "name": "git",
                "color": "F05032"
            },
            {
                "id": 2,
                "name": "github",
                "color": "181717"
            },
            {
                "id": 3,
                "name": "javascript",
                "color": "F7DF1E"
            },
            {
                "id": 4,
                "name": "react",
                "color": "61DAFB"
            },
            {
                "id": 5,
                "name": "reactRouter",
                "color": "CA4245"
            },
            {
                "id": 6,
                "name": "styledComponents",
                "color": "DB7093"
            },
            {
                "id": 7,
                "name": "reactQuery",
                "color": "FF4154"
            }
        ],
        "myPart": [
            {
                "id": 1,
                "name": "main page 1",
                "content": [
                    {
                        "id": 1,
                        "content": "사용자가 사이트에 처음들어가면 실시간으로 전달되는 현장 CCTV 페이지"
                    },
                    {
                        "id": 2,
                        "content": "react-hls-player를 이용하여 .m3u8 파일을 실시간으로 보여줌"
                    },
                    {
                        "id": 3,
                        "content": "위험을 감지하면 react query를 이용하여 실시간으로 데이터를 받아 화면에 나타내줌"
                    }
                ]
            },
            {
                "id": 2,
                "name": "main page 2",
                "content": [
                    {
                        "id": 1,
                        "content": "사용자가 채널을 클릭하면 원하는 cctv가 화면에 나타남"
                    },
                    {
                        "id": 2,
                        "content": "useEffect, newData를 이용한 현재 시간 표시"
                    },
                    {
                        "id": 3,
                        "content": "사용자가 현장에 직접나가서 일을 하기 때문에 오늘의 날씨가 굉장히 중요해서 현재 날씨, 시간별 날씨를 나타내주는 날씨 api호출 (openweathermap)"
                    },
                    {
                        "id": 4,
                        "content": "실시간으로 작업자, 중장비 관리에 대한 내역을 그래프로 나타내줌"
                    },
                    {
                        "id": 5,
                        "content": "현장에서 사용자가 위험하다고 판단되는 구역을 드래그로 도형을 만들어 구역을 지정하고 저장해 줄 수있음"
                    }
                ]
            },
            {
                "id": 3,
                "name": "notice page",
                "content": [
                    {
                        "id": 1,
                        "content": "백앤드와의 통신을 통하여 C.R.U.D 구현"
                    },
                    {
                        "id": 2,
                        "content": "외부 라이브러리 react quill을 이용한 글쓰기 에디터 이용"
                    }
                ]
            }
        ],
        "review": [
            {
                "id": 1,
                "content": "개발자를 준비하면서 처음으로 실전에 투입하여 작업한 인턴쉽"
            },
            {
                "id": 2,
                "content": "스마트인사이드AI는 AI를 이용하여 실시간으로 데이터를 받아오는 서비스를 제공하는 회사였는데, 앞서 해보았던 프로젝트들은 eCommerce 위주의 사이트를 주로 해보았어서 새로운 경험 될 수 있었다."
            },
            {
                "id": 3,
                "content": "그리고 회사내에 디자이너분이 따로 계셔서 협업에 관하여 더 배울 수 있는 계기가 되었다."
            },
            {
                "id": 4,
                "content": "프로젝트를 진행 할 당시 외부 api를 불러오는것이 생소했던지라 호출 타이밍을 맞추는데서 어려움을 겪었었다. 이 문제를 해결하기 위해 useEffect의 의존성 배열에 관해 좀 더 공부하는 시간을 가지면서 문제는 원활하게 해결하였다."
            },
            {
                "id": 5,
                "content": "또한 서버와 통신을 하면서 막히는 부분은 팀원들과 지속적으로 꾸준히 소통을 해왔기떄문에 막힘없이 해결이 가능했었다."
            },
            {
                "id": 6,
                "content": "약 한달간 인턴쉽을 경험하면서 하나를 해결하면 함께 기뻐하고 해내가면서 프로젝트를 마무리 할 수 있었다. 기업협업이라는 정말 좋은 기회를 허무하게 날리지 않고, 팀원들과 자신이 할 수 있는 역량과 그걸 뛰어넘는 역량을 프로젝트에 녹일 수 있어서 너무나 값진 시간이었다."
            }
        ]
    }
]
